# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.cameraservice import cameraservice_pb2 as proto_dot_cameraservice_dot_cameraservice__pb2


class HardwareControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TakePicture = channel.unary_stream(
                '/HardwareController/TakePicture',
                request_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.PictureConfig.SerializeToString,
                response_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.Picture.FromString,
                )


class HardwareControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TakePicture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HardwareControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TakePicture': grpc.unary_stream_rpc_method_handler(
                    servicer.TakePicture,
                    request_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.PictureConfig.FromString,
                    response_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.Picture.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'HardwareController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HardwareController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TakePicture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/HardwareController/TakePicture',
            proto_dot_cameraservice_dot_cameraservice__pb2.PictureConfig.SerializeToString,
            proto_dot_cameraservice_dot_cameraservice__pb2.Picture.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ServiceControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TakePicture = channel.unary_unary(
                '/ServiceController/TakePicture',
                request_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.PictureConfig.SerializeToString,
                response_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.FromString,
                )
        self.GetPicture = channel.unary_stream(
                '/ServiceController/GetPicture',
                request_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.SerializeToString,
                response_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.Picture.FromString,
                )
        self.DeletePicture = channel.unary_unary(
                '/ServiceController/DeletePicture',
                request_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.SerializeToString,
                response_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.Empty.FromString,
                )
        self.GetAllPictures = channel.unary_unary(
                '/ServiceController/GetAllPictures',
                request_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointers.FromString,
                )


class ServiceControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TakePicture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPicture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePicture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllPictures(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TakePicture': grpc.unary_unary_rpc_method_handler(
                    servicer.TakePicture,
                    request_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.PictureConfig.FromString,
                    response_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.SerializeToString,
            ),
            'GetPicture': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPicture,
                    request_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.FromString,
                    response_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.Picture.SerializeToString,
            ),
            'DeletePicture': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePicture,
                    request_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.FromString,
                    response_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.Empty.SerializeToString,
            ),
            'GetAllPictures': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllPictures,
                    request_deserializer=proto_dot_cameraservice_dot_cameraservice__pb2.Empty.FromString,
                    response_serializer=proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointers.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ServiceController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TakePicture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServiceController/TakePicture',
            proto_dot_cameraservice_dot_cameraservice__pb2.PictureConfig.SerializeToString,
            proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPicture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ServiceController/GetPicture',
            proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.SerializeToString,
            proto_dot_cameraservice_dot_cameraservice__pb2.Picture.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePicture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServiceController/DeletePicture',
            proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointer.SerializeToString,
            proto_dot_cameraservice_dot_cameraservice__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllPictures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServiceController/GetAllPictures',
            proto_dot_cameraservice_dot_cameraservice__pb2.Empty.SerializeToString,
            proto_dot_cameraservice_dot_cameraservice__pb2.PicturePointers.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
